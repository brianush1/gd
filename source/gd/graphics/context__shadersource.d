module gd.graphics.context__shadersource;
template Global(string name) if (name == "viewportPos") { enum Global = "Z"; }
template Global(string name) if (name == "instanceID") { enum Global = "Q"; }
template Global(string name) if (name == "viewportSize") { enum Global = "AA"; }
struct C2gd8graphics7context18ShaderSubpixelBlit {
	enum VertexSource = "struct A{vec4 f0;};struct B{vec2 f0;vec2 f1;};uniform ivec2 C;ivec2 D;uniform vec4 E;vec4 F;uniform float G;float H;uniform int I;int J;out vec2 K;vec2 L;A M(B N){vec2 O;vec4 P;P=vec4(0.);O=N.f0;P[0u]=O[0u];P[1u]=O[1u];P[2u]=0.;P[3u]=1.;L=N.f1;return A(P);}flat out int Q;in vec2 R;in vec2 S;void main(){B T;J=I;H=G;F=E;D=C;Q=gl_InstanceID;T.f0=R;T.f1=S;gl_Position=M(T).f0;K=L;}";
	enum FragmentSource = "struct U{ivec2 f0;ivec2 f1;};uniform sampler2D V;uniform usampler2D W;uniform ivec2 C;ivec2 D;uniform vec4 E;vec4 F;uniform float G;float H;uniform int I;int J;in vec2 K;vec2 L;out vec4 X;vec4 Y;uniform ivec2 Z;uniform ivec2 AA;void AB(){float AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF;int BG;ivec2 BH,BI;ivec4 BJ,BK;uint BL,BM,BN,BO,BP,BQ,BR,BS;uvec4 BT,BU;vec2 BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP;vec3 CQ,CR,CS,CT;vec4 CU,CV,CW,CX;BW=vec2(0.,0.);BW[0u]=0.;BW[1u]=1.;BX=vec2(0.,0.);BX[0u]=1.;BX[1u]=-1.;BZ=L;CA=vec2(0.);CA[0u]=(BX[0u]*BZ[0u]);CA[1u]=(BX[1u]*BZ[1u]);BY=CA;CB=vec2(0.,0.);BH=U(Z,AA).f1;CB[0u]=float(BH[0u]);CB[1u]=float(BH[1u]);BI=D;CC=vec2(0.);CC[0u]=(CB[0u]/float(BI[0u]));CC[1u]=(CB[1u]/float(BI[1u]));CD=CC;CE=vec2(0.);CE[0u]=(BY[0u]*CD[0u]);CE[1u]=(BY[1u]*CD[1u]);CF=CE;CG=vec2(0.);CG[0u]=(BW[0u]+CF[0u]);CG[1u]=(BW[1u]+CF[1u]);BV=CG;BJ=ivec4(0);BT=texture(W,BV);BJ[0u]=int(BT[0u]);BJ[1u]=int(BT[1u]);BJ[2u]=int(BT[2u]);BJ[3u]=int(BT[3u]);CH=vec2(0.,0.);CH[0u]=0.;CH[1u]=1.;CI=vec2(0.,0.);CI[0u]=1.;CI[1u]=-1.;CJ=L;CK=vec2(0.);CK[0u]=(CI[0u]*CJ[0u]);CK[1u]=(CI[1u]*CJ[1u]);CL=CK;CM=vec2(0.);CM[0u]=(CH[0u]+CL[0u]);CM[1u]=(CH[1u]+CL[1u]);CU=texture(V,CM);if((J==2)){BK=ivec4(0);CN=vec2(0.,0.);CN[0u]=(1./float(D[0u]));CN[1u]=0.;CO=CN;CP=vec2(0.);CP[0u]=(BV[0u]-CO[0u]);CP[1u]=(BV[1u]-CO[1u]);BU=texture(W,CP);BK[0u]=int(BU[0u]);BK[1u]=int(BU[1u]);BK[2u]=int(BU[2u]);BK[3u]=int(BU[3u]);BL=uint(BK[0u]);CR=vec3(0.,0.,0.);BM=(BL>>0);AD=0.;if(bool((BM&1u))){AD=(AD+=0.25);}if(bool((BM&2u))){AD=(AD+=0.25);}if(bool((BM&4u))){AD=(AD+=0.25);}if(bool((BM&8u))){AD=(AD+=0.25);}AC=AD;BN=(BL>>4);AF=0.;if(bool((BN&1u))){AF=(AF+=0.25);}if(bool((BN&2u))){AF=(AF+=0.25);}if(bool((BN&4u))){AF=(AF+=0.25);}if(bool((BN&8u))){AF=(AF+=0.25);}AE=AF;BO=(BL>>8);AG=0.;if(bool((BO&1u))){AG=(AG+=0.25);}if(bool((BO&2u))){AG=(AG+=0.25);}if(bool((BO&4u))){AG=(AG+=0.25);}if(bool((BO&8u))){AG=(AG+=0.25);}CR[0u]=AC;CR[1u]=AE;CR[2u]=AG;CQ=CR;BP=uint(BJ[0u]);CT=vec3(0.,0.,0.);BQ=(BP>>0);AI=0.;if(bool((BQ&1u))){AI=(AI+=0.25);}if(bool((BQ&2u))){AI=(AI+=0.25);}if(bool((BQ&4u))){AI=(AI+=0.25);}if(bool((BQ&8u))){AI=(AI+=0.25);}AH=AI;BR=(BP>>4);AK=0.;if(bool((BR&1u))){AK=(AK+=0.25);}if(bool((BR&2u))){AK=(AK+=0.25);}if(bool((BR&4u))){AK=(AK+=0.25);}if(bool((BR&8u))){AK=(AK+=0.25);}AJ=AK;BS=(BP>>8);AL=0.;if(bool((BS&1u))){AL=(AL+=0.25);}if(bool((BS&2u))){AL=(AL+=0.25);}if(bool((BS&4u))){AL=(AL+=0.25);}if(bool((BS&8u))){AL=(AL+=0.25);}CT[0u]=AH;CT[1u]=AJ;CT[2u]=AL;CS=CT;AM=CQ[0u];AN=CS[1u];AO=CS[2u];AQ=H;AP=((AM*(1.-AQ))+((((CQ[2u]+AM)+AN)/3.)*AQ));AS=H;AR=((AN*(1.-AS))+((((AM+AN)+AO)/3.)*AS));AU=H;AT=((AO*(1.-AU))+((((AN+AO)+CS[0u])/3.)*AU));CV=vec4(0.,0.,0.,0.);AV=(AP*F[3u]);AW=(AR*F[3u]);AX=(AT*F[3u]);CV[0u]=((CU[0u]*(1.-AV))+(F[0u]*AV));CV[1u]=((CU[1u]*(1.-AW))+(F[1u]*AW));CV[2u]=((CU[2u]*(1.-AX))+(F[2u]*AX));CV[3u]=1.;Y=CV;}else{if((J==1)){AY=float(BJ[0u]);CW=vec4(0.,0.,0.,0.);AZ=(AY*F[3u]);BA=(AY*F[3u]);BB=(AY*F[3u]);CW[0u]=((CU[0u]*(1.-AZ))+(F[0u]*AZ));CW[1u]=((CU[1u]*(1.-BA))+(F[1u]*BA));CW[2u]=((CU[2u]*(1.-BB))+(F[2u]*BB));CW[3u]=1.;Y=CW;}else{BG=BJ[0u];BC=0.;if(bool((BG&1))){BC=(BC+=0.125);}if(bool((BG&2))){BC=(BC+=0.125);}if(bool((BG&4))){BC=(BC+=0.125);}if(bool((BG&8))){BC=(BC+=0.125);}if(bool((BG&16))){BC=(BC+=0.125);}if(bool((BG&32))){BC=(BC+=0.125);}if(bool((BG&64))){BC=(BC+=0.125);}if(bool((BG&128))){BC=(BC+=0.125);}CX=vec4(0.,0.,0.,0.);BD=(BC*F[3u]);BE=(BC*F[3u]);BF=(BC*F[3u]);CX[0u]=((CU[0u]*(1.-BD))+(F[0u]*BD));CX[1u]=((CU[1u]*(1.-BE))+(F[1u]*BE));CX[2u]=((CU[2u]*(1.-BF))+(F[2u]*BF));CX[3u]=1.;Y=CX;}}}void main(){L=K;J=I;H=G;F=E;D=C;AB();X=Y;}";
	template Rename(string name) if (name == "fragColor") { enum Rename = "X"; }
	template Rename(string name) if (name == "uv") { enum Rename = "K"; }
	template Rename(string name) if (name == "contrastFactor") { enum Rename = "G"; }
	template Rename(string name) if (name == "color") { enum Rename = "E"; }
	template Rename(string name) if (name == "antialias") { enum Rename = "I"; }
	template Rename(string name) if (name == "sampled") { enum Rename = "W"; }
	template Rename(string name) if (name == "target") { enum Rename = "V"; }
	template Rename(string name) if (name == "sampledSize") { enum Rename = "C"; }
}
struct C2gd8graphics7context8Shader2D {
	enum VertexSource = "struct A{vec4 f0;};struct CY{vec2 f0;int f1;};struct B{vec2 f0;vec2 f1;};struct U{ivec2 f0;ivec2 f1;};uniform CY[12]CZ;CY[12]DA;out vec2 DB;vec2 DC;uniform ivec2 Z;uniform ivec2 AA;A DD(B DE){ivec2 DF;vec2 DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS;vec4 DT;DH=DA[uint(gl_InstanceID)].f0;DI=vec2(0.);DI[0u]=(DE.f0[0u]+DH[0u]);DI[1u]=(DE.f0[1u]+DH[1u]);DG=DI;DT=vec4(0.);DF=U(Z,AA).f1;DK=vec2(0.);DK[0u]=(DG[0u]/float(DF[0u]));DK[1u]=(DG[1u]/float(DF[1u]));DJ=DK;DL=vec2(0.,0.);DL[0u]=2.;DL[1u]=-2.;DN=DL;DO=vec2(0.);DO[0u]=(DJ[0u]*DN[0u]);DO[1u]=(DJ[1u]*DN[1u]);DM=DO;DP=vec2(0.,0.);DP[0u]=-1.;DP[1u]=1.;DQ=DP;DR=vec2(0.);DR[0u]=(DM[0u]+DQ[0u]);DR[1u]=(DM[1u]+DQ[1u]);DS=DR;DT[0u]=DS[0u];DT[1u]=DS[1u];DT[2u]=0.;DT[3u]=1.;DC=DE.f1;return A(DT);}flat out int Q;in vec2 DU;in vec2 DV;void main(){B DW;DA=CZ;Q=gl_InstanceID;DW.f0=DU;DW.f1=DV;gl_Position=DD(DW).f0;DB=DC;}";
	enum FragmentSource = "struct CY{vec2 f0;int f1;};uniform CY[12]CZ;CY[12]DA;in vec2 DB;vec2 DC;out ivec4 DX;ivec4 DY;flat in int Q;void DZ(){float EA;ivec4 EB;EA=((DC[0u]/2.)+DC[1u]);if(((EA*EA)>DC[1u])){discard;}EB=ivec4(0,0,0,0);EB[0u]=DA[uint(Q)].f1;EB[1u]=0;EB[2u]=0;EB[3u]=0;DY=EB;}void main(){DC=DB;DA=CZ;DZ();DX=DY;}";
	template Rename(string name) if (name == "fragColor") { enum Rename = "DX"; }
	template Rename(string name) if (name == "uv") { enum Rename = "DB"; }
	template Rename(string name) if (name == "samples") { enum Rename = "CZ"; }
}
struct C2gd8graphics7context10ShaderBlit {
	enum VertexSource = "struct A{vec4 f0;};struct B{vec2 f0;vec2 f1;};out vec2 EC;vec2 ED;A EE(B EF){vec2 EG,EH,EI,EJ,EK,EL,EM;vec4 EN;EN=vec4(0.);EG=EF.f0;EN[0u]=EG[0u];EN[1u]=EG[1u];EN[2u]=0.;EN[3u]=1.;EH=vec2(0.,0.);EH[0u]=0.;EH[1u]=1.;EI=vec2(0.,0.);EI[0u]=1.;EI[1u]=-1.;EJ=EF.f1;EK=vec2(0.);EK[0u]=(EI[0u]*EJ[0u]);EK[1u]=(EI[1u]*EJ[1u]);EL=EK;EM=vec2(0.);EM[0u]=(EH[0u]+EL[0u]);EM[1u]=(EH[1u]+EL[1u]);ED=EM;return A(EN);}flat out int Q;in vec2 EO;in vec2 EP;void main(){B EQ;Q=gl_InstanceID;EQ.f0=EO;EQ.f1=EP;gl_Position=EE(EQ).f0;EC=ED;}";
	enum FragmentSource = "uniform sampler2D ER;in vec2 EC;vec2 ED;out vec4 ES;vec4 ET;void EU(){ET=texture(ER,ED);}void main(){ED=EC;EU();ES=ET;}";
	template Rename(string name) if (name == "fragColor") { enum Rename = "ES"; }
	template Rename(string name) if (name == "source") { enum Rename = "ER"; }
	template Rename(string name) if (name == "uv") { enum Rename = "EC"; }
}
