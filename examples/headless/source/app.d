import std.stdio;
import imageformats;
import gd.geom;
import gd.graphics;
import gd.math;
import gd.internal.application;
import gd.internal.display;
import gd.internal.window;
import gd.internal.gpu;
import gd.timer;
import gd.application;
import std.random;
import std.datetime;
import std.datetime.stopwatch;

void main() {
	WindowInitOptions options;
	options.oversizeBuffer = true;
	options.title = "Test";
	options.initialState = WindowState.Visible;
	options.depthSize = 24;
	options.size = IVec2(640, 700);

	Window win = application.display.createWindow(options);

	win.onCloseRequest.connect({
		win.state = win.state & ~WindowState.Visible;
		quitApp();
	});

	Path path;
path.moveTo(20.7, 50);
path.lineTo(20.7, 40.298);
path.lineTo(21.792, 40.298);
path.lineTo(21.792, 44.47);
path.lineTo(26.048, 44.47);
path.lineTo(26.048, 40.298);
path.lineTo(27.14, 40.298);
path.lineTo(27.14, 50);
path.lineTo(26.048, 50);
path.lineTo(26.048, 45.408);
path.lineTo(21.792, 45.408);
path.lineTo(21.792, 50);
path.lineTo(20.7, 50);
path.moveTo(32.208, 50.168);
path.quadTo(30.934, 50.168, 30.108, 49.664);
path.quadTo(29.296, 49.146, 28.904, 48.278);
path.quadTo(28.512, 47.41, 28.512, 46.374);
path.quadTo(28.512, 45.408, 28.806, 44.694);
path.quadTo(29.1, 43.98, 29.59, 43.518);
path.quadTo(30.094, 43.042, 30.696, 42.818);
path.quadTo(31.298, 42.58, 31.928, 42.58);
path.quadTo(33.342, 42.58, 34.14, 43.49);
path.quadTo(34.938, 44.386, 34.938, 46.262);
path.quadTo(34.938, 46.318, 34.938, 46.43);
path.quadTo(34.938, 46.542, 34.938, 46.64);
path.lineTo(29.604, 46.64);
path.quadTo(29.716, 47.886, 30.402, 48.53);
path.quadTo(31.102, 49.16, 32.376, 49.16);
path.quadTo(33.09, 49.16, 33.566, 49.048);
path.quadTo(34.042, 48.936, 34.252, 48.838);
path.lineTo(34.406, 49.762);
path.quadTo(34.238, 49.888, 33.608, 50.028);
path.quadTo(32.992, 50.168, 32.208, 50.168);
path.moveTo(29.646, 45.674);
path.lineTo(33.776, 45.674);
path.quadTo(33.776, 44.988, 33.524, 44.512);
path.quadTo(33.286, 44.036, 32.866, 43.784);
path.quadTo(32.446, 43.518, 31.9, 43.518);
path.quadTo(31.27, 43.518, 30.78, 43.84);
path.quadTo(30.304, 44.148, 30.01, 44.652);
path.quadTo(29.716, 45.142, 29.646, 45.674);
path.moveTo(41.028, 50.168);
path.quadTo(40.104, 50.168, 39.614, 49.846);
path.quadTo(39.124, 49.51, 38.928, 48.866);
path.quadTo(38.746, 48.222, 38.746, 47.242);
path.lineTo(38.746, 40.158);
path.lineTo(36.604, 40.158);
path.lineTo(36.604, 39.206);
path.lineTo(39.81, 39.206);
path.lineTo(39.81, 47.2);
path.quadTo(39.81, 47.984, 39.936, 48.418);
path.quadTo(40.076, 48.838, 40.342, 49.006);
path.quadTo(40.608, 49.16, 41.028, 49.16);
path.quadTo(41.462, 49.16, 41.84, 49.062);
path.quadTo(42.232, 48.964, 42.498, 48.824);
path.lineTo(42.652, 49.776);
path.quadTo(42.456, 49.888, 41.98, 50.028);
path.quadTo(41.504, 50.168, 41.028, 50.168);
path.moveTo(48.868, 50.168);
path.quadTo(47.944, 50.168, 47.454, 49.846);
path.quadTo(46.964, 49.51, 46.768, 48.866);
path.quadTo(46.586, 48.222, 46.586, 47.242);
path.lineTo(46.586, 40.158);
path.lineTo(44.444, 40.158);
path.lineTo(44.444, 39.206);
path.lineTo(47.65, 39.206);
path.lineTo(47.65, 47.2);
path.quadTo(47.65, 47.984, 47.776, 48.418);
path.quadTo(47.916, 48.838, 48.182, 49.006);
path.quadTo(48.448, 49.16, 48.868, 49.16);
path.quadTo(49.302, 49.16, 49.68, 49.062);
path.quadTo(50.072, 48.964, 50.338, 48.824);
path.lineTo(50.492, 49.776);
path.quadTo(50.296, 49.888, 49.82, 50.028);
path.quadTo(49.344, 50.168, 48.868, 50.168);
path.moveTo(55.252, 50.154);
path.quadTo(54.328, 50.154, 53.6, 49.692);
path.quadTo(52.886, 49.216, 52.466, 48.376);
path.quadTo(52.046, 47.522, 52.046, 46.374);
path.quadTo(52.046, 45.226, 52.452, 44.386);
path.quadTo(52.872, 43.532, 53.6, 43.056);
path.quadTo(54.328, 42.58, 55.252, 42.58);
path.quadTo(56.204, 42.58, 56.932, 43.056);
path.quadTo(57.674, 43.532, 58.094, 44.386);
path.quadTo(58.514, 45.226, 58.514, 46.374);
path.quadTo(58.514, 47.522, 58.094, 48.376);
path.quadTo(57.674, 49.216, 56.932, 49.692);
path.quadTo(56.204, 50.154, 55.252, 50.154);
path.moveTo(55.266, 49.146);
path.quadTo(56.218, 49.146, 56.792, 48.418);
path.quadTo(57.38, 47.676, 57.38, 46.374);
path.quadTo(57.38, 45.072, 56.792, 44.33);
path.quadTo(56.204, 43.574, 55.252, 43.574);
path.quadTo(54.328, 43.574, 53.754, 44.33);
path.quadTo(53.18, 45.072, 53.18, 46.374);
path.quadTo(53.18, 47.676, 53.768, 48.418);
path.quadTo(54.356, 49.146, 55.266, 49.146);
path.moveTo(61.86, 52.212);
path.lineTo(61.65, 51.26);
path.quadTo(62.028, 51.176, 62.364, 51.078);
path.quadTo(62.714, 50.98, 62.98, 50.77);
path.quadTo(63.26, 50.546, 63.4, 50.14);
path.quadTo(62.91, 50.098, 62.714, 49.776);
path.quadTo(62.518, 49.454, 62.518, 49.188);
path.quadTo(62.518, 48.572, 62.868, 48.264);
path.quadTo(63.218, 47.942, 63.61, 47.942);
path.quadTo(64.17, 47.942, 64.436, 48.362);
path.quadTo(64.716, 48.768, 64.716, 49.314);
path.quadTo(64.716, 49.874, 64.394, 50.518);
path.quadTo(64.072, 51.148, 63.442, 51.624);
path.quadTo(62.812, 52.1, 61.86, 52.212);
path.moveTo(79.248, 50.168);
path.quadTo(77.974, 50.168, 77.148, 49.664);
path.quadTo(76.336, 49.146, 75.944, 48.278);
path.quadTo(75.552, 47.41, 75.552, 46.374);
path.quadTo(75.552, 45.408, 75.846, 44.694);
path.quadTo(76.14, 43.98, 76.63, 43.518);
path.quadTo(77.134, 43.042, 77.736, 42.818);
path.quadTo(78.338, 42.58, 78.968, 42.58);
path.quadTo(80.382, 42.58, 81.18, 43.49);
path.quadTo(81.978, 44.386, 81.978, 46.262);
path.quadTo(81.978, 46.318, 81.978, 46.43);
path.quadTo(81.978, 46.542, 81.978, 46.64);
path.lineTo(76.644, 46.64);
path.quadTo(76.756, 47.886, 77.442, 48.53);
path.quadTo(78.142, 49.16, 79.416, 49.16);
path.quadTo(80.13, 49.16, 80.606, 49.048);
path.quadTo(81.082, 48.936, 81.292, 48.838);
path.lineTo(81.446, 49.762);
path.quadTo(81.278, 49.888, 80.648, 50.028);
path.quadTo(80.032, 50.168, 79.248, 50.168);
path.moveTo(76.686, 45.674);
path.lineTo(80.816, 45.674);
path.quadTo(80.816, 44.988, 80.564, 44.512);
path.quadTo(80.326, 44.036, 79.906, 43.784);
path.quadTo(79.486, 43.518, 78.94, 43.518);
path.quadTo(78.31, 43.518, 77.82, 43.84);
path.quadTo(77.344, 44.148, 77.05, 44.652);
path.quadTo(76.756, 45.142, 76.686, 45.674);
path.moveTo(86.08, 50);
path.quadTo(85.604, 49.006, 85.086, 47.83);
path.quadTo(84.568, 46.64, 84.092, 45.352);
path.quadTo(83.63, 44.064, 83.266, 42.748);
path.lineTo(84.484, 42.748);
path.quadTo(84.764, 43.686, 85.114, 44.792);
path.quadTo(85.464, 45.884, 85.856, 46.906);
path.quadTo(86.262, 47.928, 86.64, 48.684);
path.quadTo(86.92, 48.124, 87.214, 47.396);
path.quadTo(87.522, 46.668, 87.816, 45.87);
path.quadTo(88.11, 45.058, 88.376, 44.26);
path.quadTo(88.642, 43.462, 88.852, 42.748);
path.lineTo(90.014, 42.748);
path.quadTo(89.65, 44.064, 89.16, 45.352);
path.quadTo(88.67, 46.64, 88.138, 47.83);
path.quadTo(87.62, 49.006, 87.13, 50);
path.lineTo(86.08, 50);
path.moveTo(94.928, 50.168);
path.quadTo(93.654, 50.168, 92.828, 49.664);
path.quadTo(92.016, 49.146, 91.624, 48.278);
path.quadTo(91.232, 47.41, 91.232, 46.374);
path.quadTo(91.232, 45.408, 91.526, 44.694);
path.quadTo(91.82, 43.98, 92.31, 43.518);
path.quadTo(92.814, 43.042, 93.416, 42.818);
path.quadTo(94.018, 42.58, 94.648, 42.58);
path.quadTo(96.062, 42.58, 96.86, 43.49);
path.quadTo(97.658, 44.386, 97.658, 46.262);
path.quadTo(97.658, 46.318, 97.658, 46.43);
path.quadTo(97.658, 46.542, 97.658, 46.64);
path.lineTo(92.324, 46.64);
path.quadTo(92.436, 47.886, 93.122, 48.53);
path.quadTo(93.822, 49.16, 95.096, 49.16);
path.quadTo(95.81, 49.16, 96.286, 49.048);
path.quadTo(96.762, 48.936, 96.972, 48.838);
path.lineTo(97.126, 49.762);
path.quadTo(96.958, 49.888, 96.328, 50.028);
path.quadTo(95.712, 50.168, 94.928, 50.168);
path.moveTo(92.366, 45.674);
path.lineTo(96.496, 45.674);
path.quadTo(96.496, 44.988, 96.244, 44.512);
path.quadTo(96.006, 44.036, 95.586, 43.784);
path.quadTo(95.166, 43.518, 94.62, 43.518);
path.quadTo(93.99, 43.518, 93.5, 43.84);
path.quadTo(93.024, 44.148, 92.73, 44.652);
path.quadTo(92.436, 45.142, 92.366, 45.674);
path.moveTo(100.164, 50);
path.lineTo(100.164, 43.112);
path.quadTo(100.962, 42.86, 101.76, 42.72);
path.quadTo(102.572, 42.58, 103.328, 42.58);
path.quadTo(103.692, 42.58, 103.972, 42.594);
path.quadTo(104.252, 42.608, 104.532, 42.65);
path.quadTo(104.812, 42.692, 105.176, 42.762);
path.lineTo(104.98, 43.7);
path.quadTo(104.63, 43.602, 104.364, 43.56);
path.quadTo(104.112, 43.518, 103.86, 43.518);
path.quadTo(103.622, 43.504, 103.3, 43.504);
path.quadTo(102.782, 43.504, 102.264, 43.574);
path.quadTo(101.76, 43.644, 101.256, 43.798);
path.lineTo(101.256, 50);
path.lineTo(100.164, 50);
path.moveTo(107.878, 52.632);
path.quadTo(107.654, 52.632, 107.304, 52.562);
path.quadTo(106.968, 52.478, 106.87, 52.422);
path.lineTo(107.08, 51.54);
path.quadTo(107.178, 51.596, 107.43, 51.652);
path.quadTo(107.696, 51.708, 107.906, 51.708);
path.quadTo(108.732, 51.708, 109.18, 51.386);
path.quadTo(109.642, 51.05, 110.048, 50.21);
path.quadTo(109.11, 48.46, 108.326, 46.514);
path.quadTo(107.542, 44.568, 107.052, 42.748);
path.lineTo(108.284, 42.748);
path.quadTo(108.494, 43.588, 108.816, 44.638);
path.quadTo(109.138, 45.674, 109.558, 46.78);
path.quadTo(109.992, 47.872, 110.482, 48.88);
path.quadTo(110.874, 47.83, 111.154, 46.892);
path.quadTo(111.434, 45.94, 111.686, 44.946);
path.quadTo(111.952, 43.938, 112.26, 42.748);
path.lineTo(113.408, 42.748);
path.quadTo(112.932, 44.764, 112.302, 46.696);
path.quadTo(111.672, 48.628, 111, 50.224);
path.quadTo(110.65, 51.064, 110.216, 51.596);
path.quadTo(109.782, 52.128, 109.208, 52.38);
path.quadTo(108.648, 52.632, 107.878, 52.632);
path.moveTo(117.972, 50.154);
path.quadTo(117.048, 50.154, 116.32, 49.692);
path.quadTo(115.606, 49.216, 115.186, 48.376);
path.quadTo(114.766, 47.522, 114.766, 46.374);
path.quadTo(114.766, 45.226, 115.172, 44.386);
path.quadTo(115.592, 43.532, 116.32, 43.056);
path.quadTo(117.048, 42.58, 117.972, 42.58);
path.quadTo(118.924, 42.58, 119.652, 43.056);
path.quadTo(120.394, 43.532, 120.814, 44.386);
path.quadTo(121.234, 45.226, 121.234, 46.374);
path.quadTo(121.234, 47.522, 120.814, 48.376);
path.quadTo(120.394, 49.216, 119.652, 49.692);
path.quadTo(118.924, 50.154, 117.972, 50.154);
path.moveTo(117.986, 49.146);
path.quadTo(118.938, 49.146, 119.512, 48.418);
path.quadTo(120.1, 47.676, 120.1, 46.374);
path.quadTo(120.1, 45.072, 119.512, 44.33);
path.quadTo(118.924, 43.574, 117.972, 43.574);
path.quadTo(117.048, 43.574, 116.474, 44.33);
path.quadTo(115.9, 45.072, 115.9, 46.374);
path.quadTo(115.9, 47.676, 116.488, 48.418);
path.quadTo(117.076, 49.146, 117.986, 49.146);
path.moveTo(123.082, 50);
path.lineTo(123.082, 42.944);
path.quadTo(123.824, 42.748, 124.51, 42.678);
path.quadTo(125.196, 42.594, 125.714, 42.594);
path.quadTo(126.624, 42.594, 127.282, 42.902);
path.quadTo(127.94, 43.196, 128.29, 43.882);
path.quadTo(128.654, 44.554, 128.654, 45.702);
path.lineTo(128.654, 50);
path.lineTo(127.562, 50);
path.lineTo(127.562, 45.926);
path.quadTo(127.562, 44.918, 127.31, 44.428);
path.quadTo(127.058, 43.924, 126.624, 43.756);
path.quadTo(126.204, 43.588, 125.672, 43.588);
path.quadTo(125.322, 43.588, 124.93, 43.63);
path.quadTo(124.538, 43.672, 124.174, 43.742);
path.lineTo(124.174, 50);
path.lineTo(123.082, 50);
path.moveTo(134.128, 50.168);
path.quadTo(132.854, 50.168, 132.028, 49.664);
path.quadTo(131.216, 49.146, 130.824, 48.278);
path.quadTo(130.432, 47.41, 130.432, 46.374);
path.quadTo(130.432, 45.408, 130.726, 44.694);
path.quadTo(131.02, 43.98, 131.51, 43.518);
path.quadTo(132.014, 43.042, 132.616, 42.818);
path.quadTo(133.218, 42.58, 133.848, 42.58);
path.quadTo(135.262, 42.58, 136.06, 43.49);
path.quadTo(136.858, 44.386, 136.858, 46.262);
path.quadTo(136.858, 46.318, 136.858, 46.43);
path.quadTo(136.858, 46.542, 136.858, 46.64);
path.lineTo(131.524, 46.64);
path.quadTo(131.636, 47.886, 132.322, 48.53);
path.quadTo(133.022, 49.16, 134.296, 49.16);
path.quadTo(135.01, 49.16, 135.486, 49.048);
path.quadTo(135.962, 48.936, 136.172, 48.838);
path.lineTo(136.326, 49.762);
path.quadTo(136.158, 49.888, 135.528, 50.028);
path.quadTo(134.912, 50.168, 134.128, 50.168);
path.moveTo(131.566, 45.674);
path.lineTo(135.696, 45.674);
path.quadTo(135.696, 44.988, 135.444, 44.512);
path.quadTo(135.206, 44.036, 134.786, 43.784);
path.quadTo(134.366, 43.518, 133.82, 43.518);
path.quadTo(133.19, 43.518, 132.7, 43.84);
path.quadTo(132.224, 44.148, 131.93, 44.652);
path.quadTo(131.636, 45.142, 131.566, 45.674);
path.moveTo(141.142, 46.766);
path.quadTo(141.086, 46.136, 141.03, 45.562);
path.quadTo(140.974, 44.988, 140.932, 44.358);
path.quadTo(140.904, 43.728, 140.904, 42.944);
path.lineTo(140.904, 40.298);
path.lineTo(142.052, 40.298);
path.lineTo(142.052, 42.944);
path.quadTo(142.052, 43.728, 142.024, 44.358);
path.quadTo(141.996, 44.988, 141.94, 45.562);
path.quadTo(141.898, 46.136, 141.828, 46.766);
path.lineTo(141.142, 46.766);
path.moveTo(141.478, 50.182);
path.quadTo(141.086, 50.182, 140.792, 49.902);
path.quadTo(140.512, 49.622, 140.512, 49.188);
path.quadTo(140.512, 48.74, 140.792, 48.474);
path.quadTo(141.086, 48.194, 141.478, 48.194);
path.quadTo(141.884, 48.194, 142.164, 48.474);
path.quadTo(142.458, 48.74, 142.458, 49.188);
path.quadTo(142.458, 49.622, 142.164, 49.902);
path.quadTo(141.884, 50.182, 141.478, 50.182);
path.moveTo(156.654, 50);
path.lineTo(156.654, 41.236);
path.lineTo(153.966, 41.236);
path.lineTo(153.966, 40.298);
path.lineTo(160.434, 40.298);
path.lineTo(160.434, 41.236);
path.lineTo(157.746, 41.236);
path.lineTo(157.746, 50);
path.lineTo(156.654, 50);
path.moveTo(162.282, 50);
path.lineTo(162.282, 39.332);
path.lineTo(163.374, 39.136);
path.lineTo(163.374, 42.874);
path.quadTo(163.738, 42.734, 164.144, 42.664);
path.quadTo(164.55, 42.594, 164.956, 42.594);
path.quadTo(166.076, 42.594, 166.706, 43.014);
path.quadTo(167.336, 43.42, 167.588, 44.176);
path.quadTo(167.854, 44.918, 167.854, 45.912);
path.lineTo(167.854, 50);
path.lineTo(166.762, 50);
path.lineTo(166.762, 46.206);
path.quadTo(166.762, 45.226, 166.58, 44.666);
path.quadTo(166.412, 44.092, 165.992, 43.84);
path.quadTo(165.586, 43.588, 164.858, 43.588);
path.quadTo(164.424, 43.588, 163.99, 43.686);
path.quadTo(163.556, 43.784, 163.374, 43.854);
path.lineTo(163.374, 50);
path.lineTo(162.282, 50);
path.moveTo(174.308, 50.168);
path.quadTo(173.412, 50.168, 172.908, 49.846);
path.quadTo(172.418, 49.524, 172.222, 48.894);
path.quadTo(172.026, 48.25, 172.026, 47.27);
path.lineTo(172.026, 43.686);
path.lineTo(169.884, 43.686);
path.lineTo(169.884, 42.748);
path.lineTo(173.09, 42.748);
path.lineTo(173.09, 47.2);
path.quadTo(173.09, 47.998, 173.23, 48.432);
path.quadTo(173.384, 48.852, 173.664, 49.006);
path.quadTo(173.958, 49.16, 174.35, 49.16);
path.quadTo(174.854, 49.16, 175.232, 49.034);
path.quadTo(175.624, 48.908, 175.778, 48.824);
path.lineTo(175.932, 49.776);
path.quadTo(175.904, 49.804, 175.666, 49.902);
path.quadTo(175.442, 50, 175.078, 50.084);
path.quadTo(174.728, 50.168, 174.308, 50.168);
path.moveTo(172.25, 41.558);
path.quadTo(171.858, 41.558, 171.578, 41.292);
path.quadTo(171.298, 41.012, 171.298, 40.564);
path.quadTo(171.298, 40.102, 171.578, 39.836);
path.quadTo(171.858, 39.57, 172.25, 39.57);
path.quadTo(172.656, 39.57, 172.922, 39.836);
path.quadTo(173.188, 40.102, 173.188, 40.564);
path.quadTo(173.188, 41.012, 172.922, 41.292);
path.quadTo(172.656, 41.558, 172.25, 41.558);
path.moveTo(180.426, 50.168);
path.quadTo(179.74, 50.168, 179.124, 50.07);
path.quadTo(178.508, 49.958, 177.892, 49.692);
path.lineTo(178.13, 48.656);
path.quadTo(178.676, 48.922, 179.278, 49.076);
path.quadTo(179.894, 49.23, 180.594, 49.23);
path.quadTo(181.518, 49.23, 181.98, 48.992);
path.quadTo(182.442, 48.74, 182.442, 48.222);
path.quadTo(182.442, 47.844, 182.148, 47.592);
path.quadTo(181.868, 47.326, 181.406, 47.13);
path.quadTo(180.958, 46.934, 180.44, 46.766);
path.quadTo(180.006, 46.612, 179.572, 46.43);
path.quadTo(179.138, 46.234, 178.788, 45.996);
path.quadTo(178.438, 45.744, 178.228, 45.394);
path.quadTo(178.018, 45.044, 178.018, 44.568);
path.quadTo(178.018, 43.994, 178.326, 43.546);
path.quadTo(178.648, 43.098, 179.292, 42.846);
path.quadTo(179.936, 42.58, 180.916, 42.58);
path.quadTo(181.49, 42.58, 182.12, 42.664);
path.quadTo(182.75, 42.748, 183.184, 42.86);
path.lineTo(182.988, 43.882);
path.quadTo(182.82, 43.77, 182.47, 43.7);
path.quadTo(182.134, 43.616, 181.728, 43.574);
path.quadTo(181.322, 43.518, 180.93, 43.518);
path.quadTo(180.034, 43.518, 179.558, 43.756);
path.quadTo(179.096, 43.994, 179.096, 44.554);
path.quadTo(179.096, 44.848, 179.334, 45.072);
path.quadTo(179.572, 45.282, 179.964, 45.45);
path.quadTo(180.356, 45.604, 180.818, 45.772);
path.quadTo(181.294, 45.954, 181.77, 46.164);
path.quadTo(182.26, 46.36, 182.666, 46.626);
path.quadTo(183.072, 46.892, 183.31, 47.27);
path.quadTo(183.562, 47.634, 183.562, 48.138);
path.quadTo(183.562, 48.81, 183.212, 49.272);
path.quadTo(182.876, 49.72, 182.176, 49.944);
path.quadTo(181.49, 50.168, 180.426, 50.168);
path.moveTo(197.828, 50.168);
path.quadTo(196.932, 50.168, 196.428, 49.846);
path.quadTo(195.938, 49.524, 195.742, 48.894);
path.quadTo(195.546, 48.25, 195.546, 47.27);
path.lineTo(195.546, 43.686);
path.lineTo(193.404, 43.686);
path.lineTo(193.404, 42.748);
path.lineTo(196.61, 42.748);
path.lineTo(196.61, 47.2);
path.quadTo(196.61, 47.998, 196.75, 48.432);
path.quadTo(196.904, 48.852, 197.184, 49.006);
path.quadTo(197.478, 49.16, 197.87, 49.16);
path.quadTo(198.374, 49.16, 198.752, 49.034);
path.quadTo(199.144, 48.908, 199.298, 48.824);
path.lineTo(199.452, 49.776);
path.quadTo(199.424, 49.804, 199.186, 49.902);
path.quadTo(198.962, 50, 198.598, 50.084);
path.quadTo(198.248, 50.168, 197.828, 50.168);
path.moveTo(195.77, 41.558);
path.quadTo(195.378, 41.558, 195.098, 41.292);
path.quadTo(194.818, 41.012, 194.818, 40.564);
path.quadTo(194.818, 40.102, 195.098, 39.836);
path.quadTo(195.378, 39.57, 195.77, 39.57);
path.quadTo(196.176, 39.57, 196.442, 39.836);
path.quadTo(196.708, 40.102, 196.708, 40.564);
path.quadTo(196.708, 41.012, 196.442, 41.292);
path.quadTo(196.176, 41.558, 195.77, 41.558);
path.moveTo(203.946, 50.168);
path.quadTo(203.26, 50.168, 202.644, 50.07);
path.quadTo(202.028, 49.958, 201.412, 49.692);
path.lineTo(201.65, 48.656);
path.quadTo(202.196, 48.922, 202.798, 49.076);
path.quadTo(203.414, 49.23, 204.114, 49.23);
path.quadTo(205.038, 49.23, 205.5, 48.992);
path.quadTo(205.962, 48.74, 205.962, 48.222);
path.quadTo(205.962, 47.844, 205.668, 47.592);
path.quadTo(205.388, 47.326, 204.926, 47.13);
path.quadTo(204.478, 46.934, 203.96, 46.766);
path.quadTo(203.526, 46.612, 203.092, 46.43);
path.quadTo(202.658, 46.234, 202.308, 45.996);
path.quadTo(201.958, 45.744, 201.748, 45.394);
path.quadTo(201.538, 45.044, 201.538, 44.568);
path.quadTo(201.538, 43.994, 201.846, 43.546);
path.quadTo(202.168, 43.098, 202.812, 42.846);
path.quadTo(203.456, 42.58, 204.436, 42.58);
path.quadTo(205.01, 42.58, 205.64, 42.664);
path.quadTo(206.27, 42.748, 206.704, 42.86);
path.lineTo(206.508, 43.882);
path.quadTo(206.34, 43.77, 205.99, 43.7);
path.quadTo(205.654, 43.616, 205.248, 43.574);
path.quadTo(204.842, 43.518, 204.45, 43.518);
path.quadTo(203.554, 43.518, 203.078, 43.756);
path.quadTo(202.616, 43.994, 202.616, 44.554);
path.quadTo(202.616, 44.848, 202.854, 45.072);
path.quadTo(203.092, 45.282, 203.484, 45.45);
path.quadTo(203.876, 45.604, 204.338, 45.772);
path.quadTo(204.814, 45.954, 205.29, 46.164);
path.quadTo(205.78, 46.36, 206.186, 46.626);
path.quadTo(206.592, 46.892, 206.83, 47.27);
path.quadTo(207.082, 47.634, 207.082, 48.138);
path.quadTo(207.082, 48.81, 206.732, 49.272);
path.quadTo(206.396, 49.72, 205.696, 49.944);
path.quadTo(205.01, 50.168, 203.946, 50.168);
path.moveTo(220.116, 50.168);
path.quadTo(219.556, 50.168, 218.996, 50.084);
path.quadTo(218.45, 49.986, 217.988, 49.734);
path.quadTo(217.54, 49.482, 217.26, 49.034);
path.quadTo(216.98, 48.572, 216.98, 47.858);
path.quadTo(216.98, 47.032, 217.442, 46.542);
path.quadTo(217.904, 46.052, 218.618, 45.842);
path.quadTo(219.332, 45.618, 220.088, 45.618);
path.quadTo(220.494, 45.618, 220.872, 45.674);
path.quadTo(221.264, 45.716, 221.628, 45.8);
path.lineTo(221.628, 45.408);
path.quadTo(221.628, 44.946, 221.488, 44.512);
path.quadTo(221.362, 44.078, 220.97, 43.798);
path.quadTo(220.592, 43.518, 219.836, 43.518);
path.quadTo(219.136, 43.518, 218.618, 43.63);
path.quadTo(218.114, 43.728, 217.876, 43.826);
path.lineTo(217.75, 42.888);
path.quadTo(217.988, 42.776, 218.59, 42.678);
path.quadTo(219.192, 42.58, 219.906, 42.58);
path.quadTo(220.97, 42.58, 221.586, 42.93);
path.quadTo(222.202, 43.28, 222.468, 43.896);
path.quadTo(222.734, 44.498, 222.734, 45.296);
path.lineTo(222.734, 49.888);
path.quadTo(222.258, 49.972, 221.544, 50.07);
path.quadTo(220.83, 50.168, 220.116, 50.168);
path.moveTo(220.032, 49.216);
path.quadTo(220.564, 49.216, 220.97, 49.174);
path.quadTo(221.39, 49.132, 221.628, 49.076);
path.lineTo(221.628, 46.78);
path.quadTo(221.376, 46.696, 220.984, 46.64);
path.quadTo(220.606, 46.57, 220.172, 46.57);
path.quadTo(219.682, 46.57, 219.206, 46.682);
path.quadTo(218.73, 46.794, 218.422, 47.074);
path.quadTo(218.114, 47.354, 218.114, 47.858);
path.quadTo(218.114, 48.628, 218.618, 48.922);
path.quadTo(219.136, 49.216, 220.032, 49.216);
path.moveTo(234.298, 50);
path.lineTo(234.298, 43.686);
path.lineTo(232.8, 43.686);
path.lineTo(232.8, 42.748);
path.lineTo(234.298, 42.748);
path.lineTo(234.298, 42.02);
path.quadTo(234.298, 40.914, 234.676, 40.298);
path.quadTo(235.068, 39.668, 235.698, 39.402);
path.quadTo(236.328, 39.136, 237.042, 39.136);
path.quadTo(237.602, 39.136, 238.148, 39.262);
path.quadTo(238.708, 39.388, 239.198, 39.542);
path.lineTo(238.988, 40.522);
path.quadTo(238.652, 40.326, 238.134, 40.214);
path.quadTo(237.616, 40.088, 237.07, 40.088);
path.quadTo(236.622, 40.088, 236.23, 40.27);
path.quadTo(235.852, 40.438, 235.614, 40.858);
path.quadTo(235.39, 41.278, 235.39, 42.02);
path.lineTo(235.39, 42.748);
path.lineTo(238.302, 42.748);
path.lineTo(238.302, 43.686);
path.lineTo(235.39, 43.686);
path.lineTo(235.39, 50);
path.lineTo(234.298, 50);
path.moveTo(243.412, 50.154);
path.quadTo(242.488, 50.154, 241.76, 49.692);
path.quadTo(241.046, 49.216, 240.626, 48.376);
path.quadTo(240.206, 47.522, 240.206, 46.374);
path.quadTo(240.206, 45.226, 240.612, 44.386);
path.quadTo(241.032, 43.532, 241.76, 43.056);
path.quadTo(242.488, 42.58, 243.412, 42.58);
path.quadTo(244.364, 42.58, 245.092, 43.056);
path.quadTo(245.834, 43.532, 246.254, 44.386);
path.quadTo(246.674, 45.226, 246.674, 46.374);
path.quadTo(246.674, 47.522, 246.254, 48.376);
path.quadTo(245.834, 49.216, 245.092, 49.692);
path.quadTo(244.364, 50.154, 243.412, 50.154);
path.moveTo(243.426, 49.146);
path.quadTo(244.378, 49.146, 244.952, 48.418);
path.quadTo(245.54, 47.676, 245.54, 46.374);
path.quadTo(245.54, 45.072, 244.952, 44.33);
path.quadTo(244.364, 43.574, 243.412, 43.574);
path.quadTo(242.488, 43.574, 241.914, 44.33);
path.quadTo(241.34, 45.072, 241.34, 46.374);
path.quadTo(241.34, 47.676, 241.928, 48.418);
path.quadTo(242.516, 49.146, 243.426, 49.146);
path.moveTo(248.522, 50);
path.lineTo(248.522, 42.944);
path.quadTo(249.264, 42.748, 249.95, 42.678);
path.quadTo(250.636, 42.594, 251.154, 42.594);
path.quadTo(252.064, 42.594, 252.722, 42.902);
path.quadTo(253.38, 43.196, 253.73, 43.882);
path.quadTo(254.094, 44.554, 254.094, 45.702);
path.lineTo(254.094, 50);
path.lineTo(253.002, 50);
path.lineTo(253.002, 45.926);
path.quadTo(253.002, 44.918, 252.75, 44.428);
path.quadTo(252.498, 43.924, 252.064, 43.756);
path.quadTo(251.644, 43.588, 251.112, 43.588);
path.quadTo(250.762, 43.588, 250.37, 43.63);
path.quadTo(249.978, 43.672, 249.614, 43.742);
path.lineTo(249.614, 50);
path.lineTo(248.522, 50);
path.moveTo(260.422, 50.168);
path.quadTo(259.288, 50.168, 258.728, 49.804);
path.quadTo(258.168, 49.426, 257.986, 48.754);
path.quadTo(257.804, 48.082, 257.804, 47.186);
path.lineTo(257.804, 43.686);
path.lineTo(256.32, 43.686);
path.lineTo(256.32, 42.748);
path.lineTo(257.804, 42.748);
path.lineTo(257.804, 40.662);
path.lineTo(258.896, 40.466);
path.lineTo(258.896, 42.748);
path.lineTo(261.976, 42.748);
path.lineTo(261.976, 43.686);
path.lineTo(258.896, 43.686);
path.lineTo(258.896, 47.2);
path.quadTo(258.896, 47.97, 259.05, 48.404);
path.quadTo(259.204, 48.824, 259.554, 48.992);
path.quadTo(259.918, 49.16, 260.52, 49.16);
path.quadTo(261.08, 49.16, 261.402, 49.062);
path.quadTo(261.738, 48.95, 261.99, 48.838);
path.lineTo(262.158, 49.762);
path.quadTo(262.046, 49.818, 261.598, 50);
path.quadTo(261.15, 50.168, 260.422, 50.168);
path.moveTo(276.102, 50.168);
path.quadTo(274.968, 50.168, 274.408, 49.804);
path.quadTo(273.848, 49.426, 273.666, 48.754);
path.quadTo(273.484, 48.082, 273.484, 47.186);
path.lineTo(273.484, 43.686);
path.lineTo(272, 43.686);
path.lineTo(272, 42.748);
path.lineTo(273.484, 42.748);
path.lineTo(273.484, 40.662);
path.lineTo(274.576, 40.466);
path.lineTo(274.576, 42.748);
path.lineTo(277.656, 42.748);
path.lineTo(277.656, 43.686);
path.lineTo(274.576, 43.686);
path.lineTo(274.576, 47.2);
path.quadTo(274.576, 47.97, 274.73, 48.404);
path.quadTo(274.884, 48.824, 275.234, 48.992);
path.quadTo(275.598, 49.16, 276.2, 49.16);
path.quadTo(276.76, 49.16, 277.082, 49.062);
path.quadTo(277.418, 48.95, 277.67, 48.838);
path.lineTo(277.838, 49.762);
path.quadTo(277.726, 49.818, 277.278, 50);
path.quadTo(276.83, 50.168, 276.102, 50.168);
path.moveTo(283.088, 50.168);
path.quadTo(281.814, 50.168, 280.988, 49.664);
path.quadTo(280.176, 49.146, 279.784, 48.278);
path.quadTo(279.392, 47.41, 279.392, 46.374);
path.quadTo(279.392, 45.408, 279.686, 44.694);
path.quadTo(279.98, 43.98, 280.47, 43.518);
path.quadTo(280.974, 43.042, 281.576, 42.818);
path.quadTo(282.178, 42.58, 282.808, 42.58);
path.quadTo(284.222, 42.58, 285.02, 43.49);
path.quadTo(285.818, 44.386, 285.818, 46.262);
path.quadTo(285.818, 46.318, 285.818, 46.43);
path.quadTo(285.818, 46.542, 285.818, 46.64);
path.lineTo(280.484, 46.64);
path.quadTo(280.596, 47.886, 281.282, 48.53);
path.quadTo(281.982, 49.16, 283.256, 49.16);
path.quadTo(283.97, 49.16, 284.446, 49.048);
path.quadTo(284.922, 48.936, 285.132, 48.838);
path.lineTo(285.286, 49.762);
path.quadTo(285.118, 49.888, 284.488, 50.028);
path.quadTo(283.872, 50.168, 283.088, 50.168);
path.moveTo(280.526, 45.674);
path.lineTo(284.656, 45.674);
path.quadTo(284.656, 44.988, 284.404, 44.512);
path.quadTo(284.166, 44.036, 283.746, 43.784);
path.quadTo(283.326, 43.518, 282.78, 43.518);
path.quadTo(282.15, 43.518, 281.66, 43.84);
path.quadTo(281.184, 44.148, 280.89, 44.652);
path.quadTo(280.596, 45.142, 280.526, 45.674);
path.moveTo(290.186, 50.168);
path.quadTo(289.5, 50.168, 288.884, 50.07);
path.quadTo(288.268, 49.958, 287.652, 49.692);
path.lineTo(287.89, 48.656);
path.quadTo(288.436, 48.922, 289.038, 49.076);
path.quadTo(289.654, 49.23, 290.354, 49.23);
path.quadTo(291.278, 49.23, 291.74, 48.992);
path.quadTo(292.202, 48.74, 292.202, 48.222);
path.quadTo(292.202, 47.844, 291.908, 47.592);
path.quadTo(291.628, 47.326, 291.166, 47.13);
path.quadTo(290.718, 46.934, 290.2, 46.766);
path.quadTo(289.766, 46.612, 289.332, 46.43);
path.quadTo(288.898, 46.234, 288.548, 45.996);
path.quadTo(288.198, 45.744, 287.988, 45.394);
path.quadTo(287.778, 45.044, 287.778, 44.568);
path.quadTo(287.778, 43.994, 288.086, 43.546);
path.quadTo(288.408, 43.098, 289.052, 42.846);
path.quadTo(289.696, 42.58, 290.676, 42.58);
path.quadTo(291.25, 42.58, 291.88, 42.664);
path.quadTo(292.51, 42.748, 292.944, 42.86);
path.lineTo(292.748, 43.882);
path.quadTo(292.58, 43.77, 292.23, 43.7);
path.quadTo(291.894, 43.616, 291.488, 43.574);
path.quadTo(291.082, 43.518, 290.69, 43.518);
path.quadTo(289.794, 43.518, 289.318, 43.756);
path.quadTo(288.856, 43.994, 288.856, 44.554);
path.quadTo(288.856, 44.848, 289.094, 45.072);
path.quadTo(289.332, 45.282, 289.724, 45.45);
path.quadTo(290.116, 45.604, 290.578, 45.772);
path.quadTo(291.054, 45.954, 291.53, 46.164);
path.quadTo(292.02, 46.36, 292.426, 46.626);
path.quadTo(292.832, 46.892, 293.07, 47.27);
path.quadTo(293.322, 47.634, 293.322, 48.138);
path.quadTo(293.322, 48.81, 292.972, 49.272);
path.quadTo(292.636, 49.72, 291.936, 49.944);
path.quadTo(291.25, 50.168, 290.186, 50.168);
path.moveTo(299.622, 50.168);
path.quadTo(298.488, 50.168, 297.928, 49.804);
path.quadTo(297.368, 49.426, 297.186, 48.754);
path.quadTo(297.004, 48.082, 297.004, 47.186);
path.lineTo(297.004, 43.686);
path.lineTo(295.52, 43.686);
path.lineTo(295.52, 42.748);
path.lineTo(297.004, 42.748);
path.lineTo(297.004, 40.662);
path.lineTo(298.096, 40.466);
path.lineTo(298.096, 42.748);
path.lineTo(301.176, 42.748);
path.lineTo(301.176, 43.686);
path.lineTo(298.096, 43.686);
path.lineTo(298.096, 47.2);
path.quadTo(298.096, 47.97, 298.25, 48.404);
path.quadTo(298.404, 48.824, 298.754, 48.992);
path.quadTo(299.118, 49.16, 299.72, 49.16);
path.quadTo(300.28, 49.16, 300.602, 49.062);
path.quadTo(300.938, 48.95, 301.19, 48.838);
path.lineTo(301.358, 49.762);
path.quadTo(301.246, 49.818, 300.798, 50);
path.quadTo(300.35, 50.168, 299.622, 50.168);
path.moveTo(306.174, 50.182);
path.quadTo(305.656, 50.182, 305.362, 49.832);
path.quadTo(305.082, 49.468, 305.082, 49.062);
path.quadTo(305.082, 48.628, 305.362, 48.278);
path.quadTo(305.656, 47.914, 306.174, 47.914);
path.quadTo(306.678, 47.914, 306.958, 48.278);
path.quadTo(307.252, 48.628, 307.252, 49.062);
path.quadTo(307.252, 49.468, 306.958, 49.832);
path.quadTo(306.678, 50.182, 306.174, 50.182);

	double getTime() {
		import core.time : MonoTimeImpl, ClockType;

		auto time = MonoTimeImpl!(ClockType.normal).currTime();
		return time.ticks / cast(double) time.ticksPerSecond;
	}

	// StopWatch sw = StopWatch(AutoStart.yes);
	// int i = 0;
	BitmapImage image;
	win.setPaintHandler((IRect region, IVec2 bufferSize, GPUSurface surface) {
		import std.math : cos, sin, PI_2;

		if (!image || image.size != bufferSize)
			image = new BitmapImage(bufferSize);
		Graphics g = Graphics.fromImage(image);

		// StopWatch swCpu = StopWatch(AutoStart.yes);
		g.clear(Colors.Lime);
		g.fill(Colors.White, Area.rect(100, 100, 200, 100));

		g.drawString(Colors.Black,
			"Hello, everyone!",
			Font.fromFile("/usr/share/fonts/truetype/ubuntu/UbuntuMono-R.ttf"),
			Rect(100, 100, 200, 100));

		// float scale = (sin(getTime) + 1) / 2 * (3 - 0.5) + 0.5;

		// FMat4 transform = FMat4.init;
		// transform = transform.mul(FMat4.fromPosition(300, 500, 0));
		// transform = transform.mul(FMat4.fromEulerAngles(0, 0, getTime));
		// transform = transform.mul(FMat4.fromScale(scale));
		// g.fill(Area(FillRule.EvenOdd, path), Colors.Black, transform);
		// writef!"%8.5f "(swCpu.peek.total!"nsecs" / 1.0e6);
		// g.fill(Area(FillRule.EvenOdd, path), Colors.Red);

		// if (i++ % 60 == 0)
		// 	writefln!"%8.5f"(sw.peek.total!"nsecs" / 1.0e6);
		// sw.reset();
		win.invalidate(IRect(IVec2(0, 0), IVec2(100, 100)));

		g.blitToWindow(surface);

		return IRect(IVec2(0, 0), bufferSize);
	});

	// Timer.setInterval(1.msecs, {
	// });

	// 93->1011
	// -20->1102

	/+Image img = new Image(640, 480);
	Graphics g = Graphics.fromImage(img);

	// application.display.gpuContext.clearColorBuffer(img.gpuImage, FVec4(1, 0, 1, 1));
	g.clear(Colors.Magenta);
	// g.fill(Area(FillRule.EvenOdd, path), Colors.Red);

	img.save("test.png", ImageFileFormat.PNG);+/

}
